{"version":3,"sources":["components/card/Card.module.css","components/UI/Modal.module.css","components/Quote/Quote.module.css","components/card-list/Card-list.module.css","store/quote-context.js","components/card/Card.jsx","components/card-list/Card-list.jsx","components/UI/Modal.jsx","components/Quote/Quote.jsx","App.js","reportWebVitals.js","store/QuoteProvider.js","index.js"],"names":["module","exports","QuoteContext","React","createContext","quote","Card","props","quoteCtx","useContext","className","classes","text","author","button","onClick","addQuote","bind","CardList","quotes","map","onShowQuote","indexOf","Backdrop","backdrop","ModalOverlay","modal","children","portalElement","document","getElementById","Modal","ReactDOM","createPortal","Quote","onHideQuote","blockquote","cite","App","useState","setQuotes","useEffect","fetch","then","response","json","data","logeIn","hideQuote","showQuote","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","QuoteProvider","setLogeIn","setQuote","defaultState","Provider","value","render","StrictMode"],"mappings":"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","file":"static/js/main.2a97abcd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card-container\":\"Card_card-container__ZQgu4\",\"button\":\"Card_button__2483G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__1tXyT\",\"all\":\"Modal_all__1ncRX\",\"modal\":\"Modal_modal__1tNBR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blockquote\":\"Quote_blockquote__1C-pC\",\"cite\":\"Quote_cite__1dF4s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card-list\":\"Card-list_card-list__2gSzq\"};","import React from \"react\";\r\n\r\nconst QuoteContext = React.createContext({\r\n  quote: {},\r\n});\r\n\r\nexport default QuoteContext;\r\n","import React, { useContext } from \"react\";\r\nimport QuoteContext from \"../../store/quote-context\";\r\n\r\nimport classes from \"./Card.module.css\";\r\n\r\nconst Card = (props) => {\r\n  const quoteCtx = useContext(QuoteContext);\r\n\r\n  return (\r\n    <div className={classes[\"card-container\"]}>\r\n      <div className={classes.quote}>\r\n        <h4>{props.quote.text}</h4>\r\n        <h5>{!props.quote.author ? \"anonymous\" : props.quote.author}</h5>\r\n      </div>\r\n      <button\r\n        className={classes.button}\r\n        onClick={quoteCtx.addQuote.bind(null, props.quote)}\r\n      >\r\n        display\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport Card from \"../card/Card.jsx\";\r\n\r\nimport classes from \"./Card-list.module.css\";\r\n\r\nconst CardList = (props) => {\r\n  return (\r\n    <div className={classes[\"card-list\"]}>\r\n      {\" \"}\r\n      {props.quotes.map((quote) => {\r\n        return (\r\n          <Card\r\n            quote={quote}\r\n            onClick={props.onShowQuote}\r\n            key={props.quotes.indexOf(quote)}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import { Fragment } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport classes from \"./Modal.module.css\";\r\n\r\nconst Backdrop = (props) => {\r\n  return <div className={classes.backdrop} onClick={props.onClick} />;\r\n};\r\n\r\nconst ModalOverlay = (props) => {\r\n  return <div className={classes.modal}>{props.children}</div>;\r\n};\r\n\r\nconst portalElement = document.getElementById(\"overlays\");\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <Fragment>\r\n      {ReactDOM.createPortal(\r\n        <Backdrop onClick={props.onClick} />,\r\n        portalElement\r\n      )}\r\n      {ReactDOM.createPortal(\r\n        <ModalOverlay>{props.children}</ModalOverlay>,\r\n        portalElement\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport Modal from \"../UI/Modal\";\r\nimport classes from \"./Quote.module.css\";\r\nimport QuoteContext from \"../../store/quote-context\";\r\n\r\nconst Quote = (props) => {\r\n  const quoteCtx = useContext(QuoteContext);\r\n\r\n  return (\r\n    <Modal onClick={props.onHideQuote}>\r\n      <blockquote className={classes.blockquote}>\r\n        {quoteCtx.quote.text}\r\n      </blockquote>\r\n      <cite className={classes.cite}>\r\n        {!quoteCtx.quote.author ? \"anonymous\" : quoteCtx.quote.author}\r\n      </cite>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Quote;\r\n","import React, { useEffect, useContext, useState } from \"react\";\n\nimport CardList from \"./components/card-list/Card-list.jsx\";\nimport Quote from \"./components/Quote/Quote\";\nimport QuoteContext from \"./store/quote-context.js\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  const [quotes, setQuotes] = useState([]);\n\n  const quoteCtx = useContext(QuoteContext);\n  // const [searchField, setSearchField] = useState();\n\n  useEffect(() => {\n    return fetch(\"https://type.fit/api/quotes\")\n      .then((response) => response.json())\n      .then((data) => setQuotes(data));\n  }, []);\n\n  // const handleChange = (e) => {\n  //   setSearchField(e.target.value);\n  // };\n\n  // const filteredQuotes = quotes.filter((quote) =>\n  //   quote.text.toLowerCase().includes(searchField.toLowerCase())\n  // );\n\n  return (\n    <div className=\"App\">\n      <h1>Quotes</h1>\n      {quoteCtx.logeIn && <Quote onHideQuote={quoteCtx.hideQuote} />}\n      {/* <SearchBox\n        type=\"search\"\n        placeholder=\"search quotes\"\n        onHandleChange={handleChange}\n      /> */}\n      <CardList quotes={quotes} onShowQuote={quoteCtx.showQuote} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useState } from \"react\";\r\n\r\nimport QuoteContext from \"./quote-context\";\r\n\r\nconst QuoteProvider = (props) => {\r\n  const [logeIn, setLogeIn] = useState(false);\r\n  const [quote, setQuote] = useState();\r\n\r\n  const addQuoteHandler = (quote) => {\r\n    setQuote(quote);\r\n    setLogeIn(true);\r\n  };\r\n\r\n  const showQuteHandler = () => {\r\n    setLogeIn(true);\r\n  };\r\n\r\n  const hideQuoteHandler = () => {\r\n    setLogeIn(false);\r\n  };\r\n\r\n  const defaultState = {\r\n    quote: quote,\r\n    logeIn: logeIn,\r\n    showQuote: showQuteHandler,\r\n    hideQuote: hideQuoteHandler,\r\n    addQuote: addQuoteHandler,\r\n  };\r\n\r\n  return (\r\n    <QuoteContext.Provider value={defaultState}>\r\n      {props.children}\r\n    </QuoteContext.Provider>\r\n  );\r\n};\r\n\r\nexport default QuoteProvider;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport QuoteProvider from \"./store/QuoteProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <QuoteProvider>\n      <App />\n    </QuoteProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}